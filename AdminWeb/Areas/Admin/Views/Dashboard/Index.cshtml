@model AdminWeb.Areas.Admin.Data.Services.DashboardStatsViewModel
@{
    ViewData["Title"] = "B·∫£ng ƒëi·ªÅu khi·ªÉn";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}
@if (ViewBag.Error != null)
{
    <div class="alert alert-danger">@ViewBag.Error</div>
}

<div class="row">
    <div class="col-lg-3 col-md-6">
        <div class="ibox bg-primary color-white text-center">
            <div class="ibox-title"><h5>T·ªïng s·∫£n ph·∫©m</h5></div>
            <div class="ibox-content">
                <h1 class="no-margins">@Model.TotalProducts</h1>
                <small>S·∫£n ph·∫©m ƒëang kinh doanh</small>
            </div>
        </div>
    </div>

    <div class="col-lg-3 col-md-6">
        <div class="ibox bg-success color-white text-center">
            <div class="ibox-title"><h5>T·ªïng ƒë∆°n h√†ng</h5></div>
            <div class="ibox-content">
                <h1 class="no-margins">@Model.TotalOrders</h1>
                <small>ƒê∆°n h√†ng ƒë√£ x·ª≠ l√Ω</small>
            </div>
        </div>
    </div>

    <div class="col-lg-3 col-md-6">
        <div class="ibox bg-warning color-white text-center">
            <div class="ibox-title"><h5>Ng∆∞·ªùi d√πng</h5></div>
            <div class="ibox-content">
                <h1 class="no-margins">@Model.TotalUsers</h1>
                <small>Kh√°ch h√†ng ƒëƒÉng k√Ω</small>
            </div>
        </div>
    </div>

    <div class="col-lg-3 col-md-6">
        <div class="ibox bg-danger color-white text-center">
            <div class="ibox-title"><h5>Doanh thu</h5></div>
            <div class="ibox-content">
                <h1 class="no-margins">@Model.TotalRevenue.ToString("N0") ƒë</h1>
                <small>T·ªïng doanh thu</small>
            </div>
        </div>
    </div>
</div>

<hr />

<div class="row">
    <div class="col-lg-8">
        <div class="ibox">
            <div class="ibox-title"><h5>Doanh thu 12 th√°ng</h5></div>
            <div class="ibox-content">
                <canvas id="revenueChart" height="160"></canvas>
            </div>
        </div>
    </div>

    <div class="col-lg-4">
        <div class="ibox">
            <div class="ibox-title"><h5>T·ª∑ l·ªá tr·∫°ng th√°i ƒë∆°n h√†ng</h5></div>
            <div class="ibox-content">
                <canvas id="orderStatusChart" height="160"></canvas>
            </div>
        </div>
    </div>
</div>

<div class="row mt-4">
    <div class="col-lg-12">
        <div class="ibox">
            <div class="ibox-title"><h5>ƒê∆°n h√†ng m·ªõi nh·∫•t</h5></div>
            <div class="ibox-content">
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>M√£ ƒë∆°n</th>
                            <th>Kh√°ch h√†ng</th>
                            <th>Ng√†y ƒë·∫∑t</th>
                            <th>T·ªïng ti·ªÅn</th>
                            <th>Tr·∫°ng th√°i</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.RecentOrders.Any())
                        {
                            foreach (var o in Model.RecentOrders)
                            {
                                <tr>
                                    <td>#@o.OrderId</td>
                                    <td>@(o.Shipping?.RecipientName ?? "N/A")</td>
                                    <td>@o.OrderDate.ToString("dd/MM/yyyy")</td>
                                    <td>@($"{o.TotalAmount:N0} ƒë")</td>
                                    <td><span class="badge bg-info">@o.Status</span></td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr><td colspan="5" class="text-center text-muted">Kh√¥ng c√≥ ƒë∆°n h√†ng n√†o</td></tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
@section Styles {
    <style>
        /* üé® Ghi ƒë√® ch·ªØ tr·∫Øng m·∫∑c ƒë·ªãnh trong ibox */
        .ibox.bg-primary,
        .ibox.bg-success,
        .ibox.bg-warning,
        .ibox.bg-danger {
            color: #000 !important; /* ch·ªØ ƒëen */
        }

        .ibox-title h5,
        .ibox-content h1,
        .ibox-content small {
            color: #000 !important; /* ti√™u ƒë·ªÅ v√† n·ªôi dung ƒë·ªÅu ƒëen */
        }

        /* üëá N·∫øu b·∫°n mu·ªën gi·ªØ n·ªÅn m√†u s√°ng h∆°n ƒë·ªÉ d·ªÖ ƒë·ªçc */
        .ibox.bg-primary {
            background-color: #d9edf7 !important; /* xanh nh·∫°t */
        }

        .ibox.bg-success {
            background-color: #dff0d8 !important; /* xanh l√° nh·∫°t */
        }

        .ibox.bg-warning {
            background-color: #fcf8e3 !important; /* v√†ng nh·∫°t */
        }

        .ibox.bg-danger {
            background-color: #f2dede !important; /* ƒë·ªè nh·∫°t */
        }
    </style>
}
@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const orderStatusData = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.OrderStatusStats));
        const monthlyRevenue = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.MonthlyRevenue));

        // üß† Map s·ªë -> ch·ªØ ti·∫øng Vi·ªát
        const statusLabels = {
            "0": "Ch·ªù x√°c nh·∫≠n",
            "1": "ƒê√£ x√°c nh·∫≠n",
            "2": "ƒêang giao",
            "3": "Ho√†n t·∫•t",
            "4": "ƒê√£ h·ªßy"
        };

        // === Bi·ªÉu ƒë·ªì tr·∫°ng th√°i ƒë∆°n h√†ng ===
        new Chart(document.getElementById('orderStatusChart'), {
            type: 'doughnut',
            data: {
                labels: orderStatusData.map(s => statusLabels[s.Status] || "Kh√¥ng x√°c ƒë·ªãnh"),
                datasets: [{
                    data: orderStatusData.map(s => s.Count),
                    backgroundColor: ['#1ab394', '#f8ac59', '#ed5565', '#1c84c6', '#888']
                }]
            },
            options: {
                plugins: {
                    legend: { position: 'bottom' }
                }
            }
        });

        // === Bi·ªÉu ƒë·ªì doanh thu ===
        new Chart(document.getElementById('revenueChart'), {
            type: 'line',
            data: {
                labels: monthlyRevenue.map(m => m.Month),
                datasets: [{
                    label: 'Doanh thu (VNƒê)',
                    data: monthlyRevenue.map(m => m.Revenue),
                    borderColor: '#1ab394',
                    backgroundColor: 'rgba(26,179,148,0.2)',
                    fill: true,
                    tension: 0.3
                }]
            }
        });
    </script>
}
