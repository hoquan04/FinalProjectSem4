@model AdminWeb.Areas.Admin.Models.UserEditModel
@{
    ViewData["Title"] = "Chỉnh sửa người dùng";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="row">
    <div class="col-lg-8">
        <div class="ibox">
            <div class="ibox-title">
                <h5>@ViewData["Title"]: @Model.FullName</h5>
                <div class="ibox-tools">
                    <a asp-action="Index" class="btn btn-sm btn-secondary">
                        <i class="fa fa-arrow-left"></i> Quay lại danh sách
                    </a>
                </div>
            </div>
            <div class="ibox-content">
                <form asp-action="Edit" method="post" class="form-horizontal" id="editUserForm">
                    <input asp-for="UserId" type="hidden" />
                    @Html.AntiForgeryToken()

                    <!-- Hiển thị lỗi API -->
                    <div id="apiError" class="alert alert-danger" style="display:none;"></div>

                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                    <div class="form-group">
                        <label asp-for="FullName" class="col-sm-2 control-label"></label>
                        <div class="col-sm-10">
                            <input asp-for="FullName" class="form-control" placeholder="Nhập họ và tên">
                            <span asp-validation-for="FullName" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="form-group">
                        <label asp-for="Email" class="col-sm-2 control-label"></label>
                        <div class="col-sm-10">
                            <input asp-for="Email" class="form-control" placeholder="Nhập email">
                            <span asp-validation-for="Email" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="form-group">
                        <label asp-for="Phone" class="col-sm-2 control-label"></label>
                        <div class="col-sm-10">
                            <input asp-for="Phone" class="form-control" placeholder="Nhập số điện thoại">
                            <span asp-validation-for="Phone" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="form-group">
                        <label asp-for="Address" class="col-sm-2 control-label"></label>
                        <div class="col-sm-10">
                            <input asp-for="Address" class="form-control" placeholder="Nhập địa chỉ">
                            <span asp-validation-for="Address" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="hr-line-dashed"></div>

                    <div class="form-group">
                        <div class="col-sm-4 col-sm-offset-2">
                            <button type="submit" class="btn btn-primary" id="btnSubmit">
                                <i class="fa fa-save"></i> Cập nhật
                            </button>
                            <a asp-action="Index" class="btn btn-default">
                                <i class="fa fa-times"></i> Hủy
                            </a>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <div class="col-lg-4">
        <div class="ibox">
            <div class="ibox-title">
                <h5>Thông tin API</h5>
            </div>
            <div class="ibox-content">
                <div class="alert alert-warning">
                    <h4><i class="fa fa-info-circle"></i> API Details</h4>
                    <p><strong>Method:</strong> PUT</p>
                    <p><strong>Endpoint:</strong></p>
                    <code>@AdminWeb.Areas.Admin.Data.ApiConstants.UserApi/@Model.UserId</code>
                    <p class="mt-2"><strong>User ID:</strong> @Model.UserId</p>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script>
        $(document).ready(function () {

            // Spinner khi submit
            $('#editUserForm').on('submit', async function (e) {
                e.preventDefault();

                var $btn = $('#btnSubmit');
                $btn.prop('disabled', true).html('<i class="fa fa-spinner fa-spin"></i> Đang cập nhật...');

                var model = {
                    UserId: $('input[name="UserId"]').val(),
                    FullName: $('input[name="FullName"]').val(),
                    Email: $('input[name="Email"]').val(),
                    Phone: $('input[name="Phone"]').val(),
                    Address: $('input[name="Address"]').val()
                };

                // Lấy PasswordHash hiện tại từ server để giữ nguyên nếu API bắt buộc
                try {
                    const respGet = await fetch(`@AdminWeb.Areas.Admin.Data.ApiConstants.UserApi/${model.UserId}`);
                    const dataGet = await respGet.json();
                    model.PasswordHash = dataGet.data?.passwordHash || "";
                } catch (err) {
                    $('#apiError').show().text("Không lấy được password hiện tại: " + err);
                    $btn.prop('disabled', false).html('<i class="fa fa-save"></i> Cập nhật');
                    return;
                }

                // Gửi PUT
                try {
                    const resp = await fetch(`@AdminWeb.Areas.Admin.Data.ApiConstants.UserApi/${model.UserId}`, {
                        method: 'PUT',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(model)
                    });

                    if (!resp.ok) {
                        const errData = await resp.json();
                        $('#apiError').show().text(JSON.stringify(errData));
                        $btn.prop('disabled', false).html('<i class="fa fa-save"></i> Cập nhật');
                        return;
                    }

                    // Thành công -> redirect về Index
                    window.location.href = '@Url.Action("Index")';

                } catch (err) {
                    $('#apiError').show().text("Lỗi khi cập nhật: " + err);
                    $btn.prop('disabled', false).html('<i class="fa fa-save"></i> Cập nhật');
                }
            });

            // Fix ChartJS crash nếu canvas không tồn tại
            function initChart(canvasId, data, options, type = 'doughnut') {
                var ctx = document.getElementById(canvasId);
                if (!ctx) return;
                new Chart(ctx.getContext('2d'), {
                    type: type,
                    data: data,
                    options: options
                });
            }

            initChart("doughnutChart", {
                labels: ["App", "Software", "Laptop"],
                datasets: [{ data: [300, 50, 100], backgroundColor: ["#a3e1d4", "#dedede", "#9CC3DA"] }]
            }, { responsive: false, legend: { display: false } });

            initChart("doughnutChart2", {
                labels: ["App", "Software", "Laptop"],
                datasets: [{ data: [70, 27, 85], backgroundColor: ["#a3e1d4", "#dedede", "#9CC3DA"] }]
            }, { responsive: false, legend: { display: false } });

        });
    </script>
}
