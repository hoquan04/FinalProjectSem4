@model AdminWeb.Areas.Admin.Models.ProductViewModel
@{
    ViewData["Title"] = "X√°c nh·∫≠n x√≥a s·∫£n ph·∫©m";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="row">
    <div class="col-lg-8">
        <div class="ibox">
            <div class="ibox-title">
                <h5>@ViewData["Title"]</h5>
                <div class="ibox-tools">
                    <a asp-action="Index" class="btn btn-sm btn-secondary">
                        <i class="fa fa-arrow-left"></i> Quay l·∫°i danh s√°ch
                    </a>
                </div>
            </div>
            <div class="ibox-content">
                
                <div class="alert alert-danger">
                    <h4><i class="fa fa-exclamation-triangle"></i> C·∫£nh b√°o!</h4>
                    <p>B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a s·∫£n ph·∫©m n√†y kh√¥ng?</p>
                    <p><strong>H√†nh ƒë·ªông n√†y kh√¥ng th·ªÉ ho√†n t√°c!</strong></p>
                </div>

                <div class="row">
                    <div class="col-md-8">
                        <dl class="dl-horizontal">
                            <dt><i class="fa fa-id-card"></i> ID:</dt>
                            <dd>
                                <span class="badge badge-primary">@Model.ProductId</span>
                            </dd>
                            
                            <dt><i class="fa fa-cube"></i> T√™n s·∫£n ph·∫©m:</dt>
                            <dd><strong>@Model.Name</strong></dd>
                            
                            <dt><i class="fa fa-tag"></i> Danh m·ª•c:</dt>
                            <dd>
                                @if (Model.Category != null)
                                {
                                    <span class="badge badge-info">@Model.Category.Name</span>
                                }
                                else
                                {
                                    <span class="text-muted">N/A</span>
                                }
                            </dd>
                            
                            <dt><i class="fa fa-info-circle"></i> M√¥ t·∫£:</dt>
                            <dd>
                                @if (string.IsNullOrEmpty(Model.Description))
                                {
                                    <em class="text-muted">Kh√¥ng c√≥ m√¥ t·∫£</em>
                                }
                                else
                                {
                                    @Model.Description
                                }
                            </dd>
                            
                            <dt><i class="fa fa-money"></i> Gi√°:</dt>
                            <dd><strong class="text-success">@Model.Price.ToString("N0") VNƒê</strong></dd>
                            
                            <dt><i class="fa fa-cubes"></i> T·ªìn kho:</dt>
                            <dd>
                                @if (Model.StockQuantity > 0)
                                {
                                    <span class="badge badge-success">@Model.StockQuantity</span>
                                }
                                else
                                {
                                    <span class="badge badge-danger">H·∫øt h√†ng</span>
                                }
                            </dd>
                            
                            <dt><i class="fa fa-calendar"></i> Ng√†y t·∫°o:</dt>
                            <dd>@Model.CreatedAt.ToString("dd/MM/yyyy HH:mm")</dd>
                        </dl>
                    </div>
                    
                    @* Hi·ªÉn th·ªã h√¨nh ·∫£nh n·∫øu c√≥ *@
                    @if (!string.IsNullOrEmpty(Model.ImageUrl))
                    {
                        <div class="col-md-4">
                            <div class="text-center">
                                <img src="@Model.ImageUrl" alt="@Model.Name" class="img-responsive img-thumbnail" style="max-height: 200px;">
                            </div>
                        </div>
                    }
                </div>

                <div class="hr-line-dashed"></div>
                
                @* Form ƒë·ªÉ DELETE API *@
                <form asp-action="Delete" method="post">
                    <input asp-for="ProductId" type="hidden" />
                    @Html.AntiForgeryToken()
                    
                    <div class="form-group">
                        <button type="submit" class="btn btn-danger" id="btnDelete">
                            <i class="fa fa-trash"></i> X√°c nh·∫≠n x√≥a
                        </button>
                        <a asp-action="Index" class="btn btn-default">
                            <i class="fa fa-times"></i> H·ªßy
                        </a>
                    </div>
                </form>
            </div>
        </div>
    </div>
    
    <div class="col-lg-4">
        <div class="ibox">
            <div class="ibox-title">
                <h5>Th√¥ng tin API</h5>
            </div>
            <div class="ibox-content">
                <div class="alert alert-danger">
                    <h4><i class="fa fa-trash"></i> DELETE API</h4>
                    <p><strong>Method:</strong> DELETE</p>
                    <p><strong>Endpoint:</strong></p>
                    <code>@AdminWeb.Areas.Admin.Data.ApiConstants.ProductApi/@Model.ProductId</code>
                    <p class="mt-2"><strong>L∆∞u √Ω:</strong></p>
                    <small>Vi·ªác x√≥a s·∫£n ph·∫©m c√≥ th·ªÉ ·∫£nh h∆∞·ªüng ƒë·∫øn c√°c ƒë∆°n h√†ng v√† ƒë√°nh gi√° li√™n quan.</small>
                </div>
            </div>
        </div>
        
        @* Th·ªëng k√™ li√™n quan *@
        <div class="ibox">
            <div class="ibox-title">
                <h5>Th√¥ng tin li√™n quan</h5>
            </div>
            <div class="ibox-content">
                <div class="alert alert-info">
                    <h4><i class="fa fa-info-circle"></i> C·∫£nh b√°o</h4>
                    <p><strong>T√°c ƒë·ªông khi x√≥a:</strong></p>
                    <ul class="list-unstyled">
                        <li><i class="fa fa-check"></i> X√≥a s·∫£n ph·∫©m kh·ªèi h·ªá th·ªëng</li>
                        <li><i class="fa fa-warning text-warning"></i> C√≥ th·ªÉ ·∫£nh h∆∞·ªüng ƒë·∫øn ƒë∆°n h√†ng</li>
                        <li><i class="fa fa-warning text-warning"></i> C√≥ th·ªÉ ·∫£nh h∆∞·ªüng ƒë·∫øn ƒë√°nh gi√°</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        console.log('üîß Product Delete script loaded');
        
        // JavaScript ƒë·ªÉ show loading khi submit
        $('#btnDelete').click(function(e) {
            e.preventDefault(); // NgƒÉn submit m·∫∑c ƒë·ªãnh
            
            console.log('üñ±Ô∏è Delete button clicked');
            console.log('üéØ ProductId:', @Model.ProductId);
            
            if (!confirm('B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a s·∫£n ph·∫©m "@Model.Name" kh√¥ng?')) {
                console.log('‚ùå User cancelled delete');
                return false;
            }
            
            console.log('‚úÖ User confirmed delete');
            
            var $btn = $(this);
            var $form = $btn.closest('form');
            
            // Show loading state
            $btn.prop('disabled', true)
                .html('<i class="fa fa-spinner fa-spin"></i> ƒêang x√≥a...');
            
            console.log('üöÄ Submitting form to:', $form.attr('action'));
            console.log('üì¶ Form method:', $form.attr('method'));
            
            // Submit form manually
            $form.submit();
        });
        
        // Log form submit event
        $('form').on('submit', function(e) {
            console.log('üì§ Form is being submitted');
            console.log('üéØ Form action:', $(this).attr('action'));
            console.log('üéØ Form method:', $(this).attr('method'));
            
            // Log form data
            var formData = new FormData(this);
            console.log('üìã Form data:');
            for (var pair of formData.entries()) {
                console.log('   ' + pair[0] + ': ' + pair[1]);
            }
        });
        
        // Th√™m timeout ƒë·ªÉ reset button n·∫øu qu√° l√¢u
        var deleteTimeout;
        $('form').on('submit', function() {
            deleteTimeout = setTimeout(function() {
                $('#btnDelete').prop('disabled', false)
                              .html('<i class="fa fa-trash"></i> X√°c nh·∫≠n x√≥a');
                alert('Thao t√°c m·∫•t qu√° nhi·ªÅu th·ªùi gian. Vui l√≤ng ki·ªÉm tra k·∫øt n·ªëi API v√† th·ª≠ l·∫°i.');
            }, 30000); // 30 gi√¢y timeout
        });
        
        // Clear timeout khi page unload
        $(window).on('beforeunload', function() {
            if (deleteTimeout) {
                clearTimeout(deleteTimeout);
            }
        });
    </script>
}
