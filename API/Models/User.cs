// File: Models/User.cs
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Text.Json.Serialization;
using Microsoft.AspNetCore.Mvc.ModelBinding;

namespace API.Models
{
    public class User
    {
        [Key]
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        public int UserId { get; set; }

        [Required, StringLength(100)]
        public string FullName { get; set; } = string.Empty;

        [Required, EmailAddress, StringLength(100)]
        public string Email { get; set; } = string.Empty;

        [Phone, StringLength(15)]
        public string? Phone { get; set; }

        // L∆∞u trong DB, kh√¥ng bind t·ª´ JSON, kh√¥ng serialize ra ngo√†i
        [BindNever]
        [JsonIgnore]
        [StringLength(255)]
        public string? PasswordHash { get; set; } // ‚ùó KH√îNG [Required], KH√îNG default ""

      

        public string? Address { get; set; }

        // ‚öôÔ∏è Enum c√≥ converter ƒë·ªÉ xu·∫•t ra d·∫°ng string (Customer, Admin, Shipper)
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public UserRole Role { get; set; } = UserRole.Customer;

        public DateTime? CreatedAt { get; set; } = DateTime.Now;

        [NotMapped]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public string? Password { get; set; }


        [JsonIgnore] public ICollection<Order>? Orders { get; set; }
        [JsonIgnore] public ICollection<Review>? Reviews { get; set; }

        // üÜï C√°c tr∆∞·ªùng m·ªõi cho ƒëƒÉng k√Ω shipper
        public string? CccdFrontUrl { get; set; } // ·∫£nh CCCD m·∫∑t tr∆∞·ªõc
        public string? CccdBackUrl { get; set; }  // ·∫£nh CCCD m·∫∑t sau
        public bool IsShipperRequestPending { get; set; } = false;
    }

    // ‚öôÔ∏è Enum n√™n ƒë·∫∑t th·ª© t·ª± r√µ r√†ng (cho DB l∆∞u int) v√† ƒë·ªìng b·ªô v·ªõi AdminWeb
    public enum UserRole
    {
        Customer = 0,
        Admin = 1,
        Shipper = 2
    }

}
