using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Text.Json.Serialization;

namespace API.Models
{
    public class Order
    {
        [Key]
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        public int OrderId { get; set; }

        [Required(ErrorMessage = "Ng∆∞·ªùi d√πng l√† b·∫Øt bu·ªôc")]
        public int UserId { get; set; }

        public DateTime OrderDate { get; set; } = DateTime.Now;

        [Required(ErrorMessage = "Tr·∫°ng th√°i ƒë∆°n h√†ng l√† b·∫Øt bu·ªôc")]
        public OrderStatus Status { get; set; } = OrderStatus.Pending;

        [Required(ErrorMessage = "T·ªïng ti·ªÅn kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng")]
        [Range(0, 9999999999.99, ErrorMessage = "T·ªïng ti·ªÅn ph·∫£i l·ªõn h∆°n ho·∫∑c b·∫±ng 0")]
        public decimal TotalAmount { get; set; }

        public int ShippingId { get; set; }

        // üîπ Navigation Properties
        [ForeignKey(nameof(UserId))]
        [JsonIgnore]
        public User? Users { get; set; }   // ‚úÖ Cho ph√©p null

        [ForeignKey(nameof(ShippingId))]
        public Shipping? Shipping { get; set; }  // ‚úÖ Cho ph√©p null


        [JsonIgnore]
        public ICollection<OrderDetail> OrderDetails { get; set; } = new List<OrderDetail>(); // ‚úÖ kh√¥ng bao gi·ªù null

        [JsonIgnore]
        public ICollection<Payment> Payments { get; set; } = new List<Payment>(); // ‚úÖ kh√¥ng null

        [JsonIgnore]
        public ICollection<Notification> Notifications { get; set; } = new List<Notification>(); // ‚úÖ kh√¥ng null

        // üöö Shipper c√≥ th·ªÉ null
        public int? ShipperId { get; set; }

        [ForeignKey(nameof(ShipperId))]
        [JsonIgnore]
        public User? Shipper { get; set; }
    }

    public enum OrderStatus
    {
        Pending,     // ƒêang ch·ªù x√°c nh·∫≠n
        Confirmed,   // ƒê√£ x√°c nh·∫≠n
        Shipping,    // ƒêang giao
        Completed,   // Ho√†n t·∫•t
        Cancelled    // ƒê√£ h·ªßy
    }
}
